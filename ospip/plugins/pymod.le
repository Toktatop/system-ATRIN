from tkinter import *
import ctypes
import re
import os
import sys

previosText = ''

def python():
    start = input("write a python code>> ")
    eval(start)
    input("end>> ")


def ler():
    print(eval(input("calculator in 1 example you can write '1 + 1'>> ")))
    input("end>> ")


def infopy():
    print("python plugin it's the system ATRIN plugin")
    input()


def redactcode():

    print("where gonna create file? (full path and he gonna save same .le)")
    print("(but if you don't gonna write anything he gonna save in plugins)")
    print("when you gonna save plugin press = 'Ctrl+s'")
    path = input()
    print("what name of plugin gonna be?")
    name = input()

    def execute(event=None):
        if path == '':
            with open(fr'ospip\plugins\{name}.le', 'w', encoding='utf-8') as f:
                f.write(editArea.get('1.0', END))
        else:
            with open(fr"{path}\{name}.le", 'w', encoding='utf-8') as f:
                f.write(editArea.get('1.0', END))

    def changes(event=None):
        global previosText

        if editArea.get('1.0', END) == previosText:
            return

        for tag in editArea.tag_names():
            editArea.tag_remove(tag, "1.0", "end")

        i = 0
        for pattern, color in repl:
            for start, end in search_re(pattern, editArea.get('1.0', END)):
                editArea.tag_add(f'{i}', start, end)
                editArea.tag_config(f'{i}', foreground=color)

                i += 1

        previosText = editArea.get('1.0', END)

    def search_re(pattern, text):
        matches = []
        text = text.splitlines()

        for i, line in enumerate(text):
            for match in re.finditer(pattern, line):
                matches.append((f"{i + 1}.{match.start()}", f"{i + 1}.{match.end()}"))

        return matches

    def rgb(rgb):
        return "#%02x%02x%02x" % rgb

    ctypes.windll.shcore.SetProcessDpiAwareness(True)
    root = Tk()
    root.geometry('700x500')
    root.title('redactor code')

    normal = rgb((234, 234, 234))
    keywords = rgb((234, 95, 95))
    comments = rgb((95, 234, 165))
    string = rgb((234, 162, 95))
    command = rgb((127, 0, 255))
    function = rgb((95, 211, 234))
    background = rgb((42, 42, 42))
    font = 'Consolas 15'

    repl = [
        ['(^| )(False|None|True|and|as|assert|async|await|break|class|continue|def|del|elif|else|except|finally|for|print|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|raise|return|try|while|with|yield)($| )', keywords],
        ['(^|)(print|input|)($|)', command],
        ['".*?"', string],
        ['\".*?\"', string],
        ["'.*?'", string],
        ["\'.*?\'", string],
        ['#.*?$', comments],

    ]

    editArea = Text(
        root, background=background, foreground=normal, insertbackground=normal, relief=FLAT, borderwidth=30, font=font
    )

    editArea.pack(fill=BOTH, expand=1)

    editArea.insert('1.0', """def helloworld():
    print("hello world")


helloworld()
""")
    editArea.bind('<KeyRelease>', changes)

    root.bind('<Control-s>', execute)

    changes()

    root.mainloop()



if __name__ == '__main__':
    redactcode()
    print("it's plugin of system ATRIN")
    input(">> ")
